package com.client;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.ObjectInputStream.GetField;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;

import com.beans.Peripheral;

public class Client {

	public static void main(String[] args) {
		/* write your code here */
		Client c = new Client();
		Set<Peripheral> p = new HashSet<Peripheral>();
		c.readPeripheralInventory(p);
	}

	/** this method will read peripheral details from the CSV file
	given to you and populate the Set*/
	public static void readPeripheralInventory(Set<Peripheral> peripherals) {
		/* write your code here */
		
		FileReader fr;
		try {
			fr = new FileReader("Peripherals.txt");
			BufferedReader br = new BufferedReader(fr);
			String line;
			while((line=br.readLine())!=null){
				Set<Peripheral> ps = new HashSet<Peripheral>();
				Peripheral p = new Peripheral();
				String[] s = line.split(",");
				String itemCode = s[0];
				String name = s[1];
				String description = s[2];
				int price  =Integer.parseInt(s[3]);
				int quantity = Integer.parseInt(s[4]);
				p.setItemCode(itemCode);
				p.setName(name);
				p.setDescription(description);
				p.setPrice(price);
				p.setQuantity(quantity);
				ps.add(p);
		
			}
		} catch (FileNotFoundException e) {
			
			e.printStackTrace();
		} catch (IOException e) {
			
			e.printStackTrace();
		}
		
	}

	/** this method will insert the peripheral information read earlier
	into a database table */
	public static void insertPeripheralRecords(Set<Peripheral> peripherals) {
		/* write your code here */
	}

	/** this method will sort a given Set by price in the ascending order.
	It will create a new ordered Set and return it. */
	public static Set<Peripheral>  sortInventoryByPrice(Set<Peripheral> peripherals) {
		/* write your code here */
		return null;
	}

	/** this method will sort a given Set by quantity in the ascending order.
	Peripherals with the same quantity should be sorted amongst themselves 
	by price in the ascending order. It will return a new Set with the sorted objects */
	public static Set<Peripheral>  sortInventoryByQuantityPrice(Set<Peripheral> peripherals) {
		/* write your code here */
		return null;
	}

	/** this method will return a new Set with records filtered from an existing Set on the basis
	of price. Both prices are inclusive. */
	public static Set<Peripheral> filterInventoryByPrice(int startingPrice, int endingPrice, Set<Peripheral> peripherals) {
		/* write your code here */
		return null;
	}
}
